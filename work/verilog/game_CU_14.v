/*
   This file was generated automatically by the Mojo IDE version B1.3.6.
   Do not edit this file directly. Instead edit the original Lucid source.
   This is a temporary file and any changes made to it will be destroyed.
*/

module game_CU_14 (
    input clk,
    input rst,
    input button2,
    input button3,
    input button4,
    input button1,
    input button5,
    input [15:0] regfile_datain,
    output reg [5:0] alufn,
    output reg [1:0] asel,
    output reg [2:0] bsel,
    output reg [3:0] wa,
    output reg [0:0] we,
    output reg [3:0] ra,
    output reg [3:0] rb
  );
  
  
  
  localparam START_game_fsm = 6'd0;
  localparam START_1_game_fsm = 6'd1;
  localparam IDLE_game_fsm = 6'd2;
  localparam S1_game_fsm = 6'd3;
  localparam S2_1_game_fsm = 6'd4;
  localparam S3_game_fsm = 6'd5;
  localparam S3_1_game_fsm = 6'd6;
  localparam S4_game_fsm = 6'd7;
  localparam S4_1_game_fsm = 6'd8;
  localparam S4_2_game_fsm = 6'd9;
  localparam S5_game_fsm = 6'd10;
  localparam S6_game_fsm = 6'd11;
  localparam S6_1_game_fsm = 6'd12;
  localparam S7_game_fsm = 6'd13;
  localparam S7_1_game_fsm = 6'd14;
  localparam S8_game_fsm = 6'd15;
  localparam S8_1_game_fsm = 6'd16;
  localparam S9_game_fsm = 6'd17;
  localparam S9_1_game_fsm = 6'd18;
  localparam S10_game_fsm = 6'd19;
  localparam S10_1_game_fsm = 6'd20;
  localparam S11_game_fsm = 6'd21;
  localparam S11_1_game_fsm = 6'd22;
  localparam S12_game_fsm = 6'd23;
  localparam S12_1_game_fsm = 6'd24;
  localparam S_MUL_game_fsm = 6'd25;
  localparam S_MUL_1_game_fsm = 6'd26;
  localparam S_MUL_2_game_fsm = 6'd27;
  localparam S_MUL_P1_game_fsm = 6'd28;
  localparam S_MUL_P2_game_fsm = 6'd29;
  localparam S_ADD_10_game_fsm = 6'd30;
  localparam S_ADD_4_game_fsm = 6'd31;
  localparam S_ADD_2_game_fsm = 6'd32;
  localparam S_ADD_1_game_fsm = 6'd33;
  localparam S_ADD_1_1_game_fsm = 6'd34;
  localparam S_ADD_P1_game_fsm = 6'd35;
  localparam S_ADD_P2_game_fsm = 6'd36;
  localparam S_DIV_game_fsm = 6'd37;
  localparam S_DIV_1_game_fsm = 6'd38;
  localparam S_DIV_2_game_fsm = 6'd39;
  localparam S_DIV_P1_game_fsm = 6'd40;
  localparam S_DIV_P2_game_fsm = 6'd41;
  localparam S_P1_CHECK_game_fsm = 6'd42;
  localparam S_P1_CHECK_1_game_fsm = 6'd43;
  localparam S_SWITCH_P1_game_fsm = 6'd44;
  localparam S_P2_CHECK_game_fsm = 6'd45;
  localparam S_P2_CHECK_1_game_fsm = 6'd46;
  localparam S_SWITCH_P2_game_fsm = 6'd47;
  localparam WIN_game_fsm = 6'd48;
  
  reg [5:0] M_game_fsm_d, M_game_fsm_q = START_game_fsm;
  
  always @* begin
    M_game_fsm_d = M_game_fsm_q;
    
    alufn = 1'h0;
    asel = 2'h0;
    bsel = 3'h0;
    wa = 4'hf;
    we = 1'h0;
    ra = 4'h0;
    rb = 4'h0;
    if (button1) begin
      M_game_fsm_d = START_game_fsm;
    end else begin
      
      case (M_game_fsm_q)
        START_game_fsm: begin
          alufn = 6'h1a;
          asel = 2'h1;
          bsel = 4'h0;
          wa = 4'h0;
          we = 1'h1;
          rb = 4'h5;
          if (button5) begin
            M_game_fsm_d = START_1_game_fsm;
          end else begin
            M_game_fsm_d = START_game_fsm;
          end
        end
        START_1_game_fsm: begin
          alufn = 6'h1a;
          asel = 2'h2;
          bsel = 4'h0;
          wa = 4'h1;
          we = 1'h1;
          rb = 4'h1;
          M_game_fsm_d = S1_game_fsm;
        end
        S1_game_fsm: begin
          alufn = 6'h1c;
          asel = 3'h0;
          wa = 4'h2;
          we = 1'h1;
          ra = 4'h0;
          if (button2) begin
            bsel = 4'h1;
            M_game_fsm_d = S3_game_fsm;
          end else begin
            if (button3) begin
              bsel = 4'h2;
              M_game_fsm_d = S3_game_fsm;
            end else begin
              if (button4) begin
                bsel = 4'h3;
                M_game_fsm_d = S3_game_fsm;
              end else begin
                bsel = 4'h0;
                M_game_fsm_d = S1_game_fsm;
              end
            end
          end
        end
        S3_game_fsm: begin
          alufn = 6'h35;
          asel = 2'h0;
          bsel = 4'h0;
          wa = 4'h3;
          we = 1'h1;
          ra = 4'h1;
          rb = 4'h2;
          M_game_fsm_d = S3_1_game_fsm;
        end
        S3_1_game_fsm: begin
          if (regfile_datain[0+0-:1]) begin
            M_game_fsm_d = S4_game_fsm;
          end else begin
            M_game_fsm_d = S5_game_fsm;
          end
        end
        S4_game_fsm: begin
          alufn = 6'h01;
          asel = 2'h0;
          bsel = 4'h0;
          wa = 4'h2;
          we = 1'h1;
          ra = 4'h2;
          rb = 4'h1;
          M_game_fsm_d = S4_1_game_fsm;
        end
        S4_1_game_fsm: begin
          alufn = 6'h1a;
          asel = 2'h1;
          bsel = 4'h0;
          wa = 4'h0;
          we = 1'h1;
          rb = 4'h5;
          M_game_fsm_d = S4_2_game_fsm;
        end
        S4_2_game_fsm: begin
          alufn = 6'h1a;
          asel = 2'h2;
          bsel = 4'h0;
          wa = 4'h1;
          we = 1'h1;
          rb = 4'h1;
          M_game_fsm_d = S5_game_fsm;
        end
        S5_game_fsm: begin
          alufn = 6'h23;
          asel = 2'h0;
          bsel = 4'h0;
          wa = 4'h0;
          we = 1'h1;
          ra = 4'h0;
          rb = 4'h2;
          M_game_fsm_d = S6_game_fsm;
        end
        S6_game_fsm: begin
          alufn = 6'h01;
          asel = 2'h0;
          bsel = 4'h0;
          wa = 4'h1;
          we = 1'h1;
          ra = 4'h1;
          rb = 4'h2;
          M_game_fsm_d = S6_1_game_fsm;
        end
        S6_1_game_fsm: begin
          alufn = 6'h01;
          asel = 2'h2;
          bsel = 4'h0;
          wa = 4'h8;
          we = 1'h1;
          rb = 4'h1;
          M_game_fsm_d = S7_game_fsm;
        end
        S7_game_fsm: begin
          alufn = 6'h33;
          asel = 2'h0;
          bsel = 4'h1;
          wa = 4'h3;
          we = 1'h1;
          ra = 4'h8;
          M_game_fsm_d = S7_1_game_fsm;
        end
        S7_1_game_fsm: begin
          if (regfile_datain[0+0-:1]) begin
            M_game_fsm_d = S_MUL_game_fsm;
          end else begin
            M_game_fsm_d = S8_game_fsm;
          end
        end
        S8_game_fsm: begin
          alufn = 6'h33;
          asel = 2'h0;
          bsel = 4'hb;
          wa = 4'h3;
          we = 1'h1;
          ra = 4'h8;
          M_game_fsm_d = S8_1_game_fsm;
        end
        S8_1_game_fsm: begin
          if (regfile_datain[0+0-:1]) begin
            M_game_fsm_d = S_ADD_10_game_fsm;
          end else begin
            M_game_fsm_d = S9_game_fsm;
          end
        end
        S9_game_fsm: begin
          alufn = 6'h33;
          asel = 2'h0;
          bsel = 4'h9;
          wa = 4'h3;
          we = 1'h1;
          ra = 4'h8;
          M_game_fsm_d = S9_1_game_fsm;
        end
        S9_1_game_fsm: begin
          if (regfile_datain[0+0-:1]) begin
            M_game_fsm_d = S_ADD_4_game_fsm;
          end else begin
            M_game_fsm_d = S10_game_fsm;
          end
        end
        S10_game_fsm: begin
          alufn = 6'h33;
          asel = 2'h0;
          bsel = 4'ha;
          wa = 4'h3;
          we = 1'h1;
          ra = 4'h8;
          M_game_fsm_d = S10_1_game_fsm;
        end
        S10_1_game_fsm: begin
          if (regfile_datain[0+0-:1]) begin
            M_game_fsm_d = S_ADD_2_game_fsm;
          end else begin
            M_game_fsm_d = S11_game_fsm;
          end
        end
        S11_game_fsm: begin
          alufn = 6'h33;
          asel = 2'h0;
          bsel = 4'h7;
          wa = 4'h3;
          we = 1'h1;
          ra = 4'h8;
          M_game_fsm_d = S11_1_game_fsm;
        end
        S11_1_game_fsm: begin
          if (regfile_datain[0+0-:1]) begin
            M_game_fsm_d = S_ADD_2_game_fsm;
          end else begin
            M_game_fsm_d = S12_game_fsm;
          end
        end
        S12_game_fsm: begin
          alufn = 6'h33;
          asel = 2'h0;
          bsel = 4'h1;
          wa = 4'h8;
          we = 1'h1;
          ra = 4'h8;
          M_game_fsm_d = S12_1_game_fsm;
        end
        S12_1_game_fsm: begin
          if (regfile_datain[0+0-:1]) begin
            M_game_fsm_d = S_DIV_game_fsm;
          end else begin
            M_game_fsm_d = S1_game_fsm;
          end
        end
        S_MUL_game_fsm: begin
          alufn = 6'h1c;
          asel = 2'h0;
          bsel = 4'h1;
          wa = 4'h7;
          we = 1'h1;
          ra = 4'h0;
          M_game_fsm_d = S_MUL_1_game_fsm;
        end
        S_MUL_1_game_fsm: begin
          alufn = 6'h33;
          asel = 2'h0;
          bsel = 4'hc;
          wa = 4'h3;
          we = 1'h1;
          ra = 4'h4;
          M_game_fsm_d = S_MUL_2_game_fsm;
        end
        S_MUL_2_game_fsm: begin
          if (regfile_datain[0+0-:1]) begin
            M_game_fsm_d = S_MUL_P1_game_fsm;
          end else begin
            M_game_fsm_d = S_MUL_P2_game_fsm;
          end
        end
        S_MUL_P1_game_fsm: begin
          alufn = 4'ha;
          asel = 2'h0;
          bsel = 4'h0;
          wa = 4'h5;
          we = 1'h1;
          ra = 4'h5;
          rb = 4'h7;
          M_game_fsm_d = S_P1_CHECK_game_fsm;
        end
        S_MUL_P2_game_fsm: begin
          alufn = 4'ha;
          asel = 2'h0;
          bsel = 4'h0;
          wa = 4'h6;
          we = 1'h1;
          ra = 4'h6;
          rb = 4'h7;
          M_game_fsm_d = S_P2_CHECK_game_fsm;
        end
        S_ADD_10_game_fsm: begin
          alufn = 6'h1c;
          asel = 2'h0;
          bsel = 4'h4;
          wa = 4'h7;
          we = 1'h1;
          ra = 4'h0;
          M_game_fsm_d = S_ADD_1_game_fsm;
        end
        S_ADD_4_game_fsm: begin
          alufn = 6'h1c;
          asel = 2'h0;
          bsel = 4'h3;
          wa = 4'h7;
          we = 1'h1;
          ra = 4'h0;
          M_game_fsm_d = S_ADD_1_game_fsm;
        end
        S_ADD_2_game_fsm: begin
          alufn = 6'h1c;
          asel = 2'h0;
          bsel = 4'h1;
          wa = 4'h7;
          we = 1'h1;
          ra = 4'h0;
          M_game_fsm_d = S_ADD_1_game_fsm;
        end
        S_ADD_1_game_fsm: begin
          alufn = 6'h33;
          asel = 2'h0;
          bsel = 4'hc;
          wa = 4'h3;
          we = 1'h1;
          ra = 4'h4;
          M_game_fsm_d = S_ADD_1_1_game_fsm;
        end
        S_ADD_1_1_game_fsm: begin
          if (regfile_datain[0+0-:1]) begin
            M_game_fsm_d = S_ADD_P1_game_fsm;
          end else begin
            M_game_fsm_d = S_ADD_P2_game_fsm;
          end
        end
        S_ADD_P1_game_fsm: begin
          alufn = 1'h0;
          asel = 2'h0;
          bsel = 4'h0;
          wa = 4'h5;
          we = 1'h1;
          ra = 4'h5;
          rb = 4'h7;
          M_game_fsm_d = S_P1_CHECK_game_fsm;
        end
        S_ADD_P2_game_fsm: begin
          alufn = 1'h0;
          asel = 2'h0;
          bsel = 4'h0;
          wa = 4'h6;
          we = 1'h1;
          ra = 4'h6;
          rb = 4'h7;
          M_game_fsm_d = S_P2_CHECK_game_fsm;
        end
        S_DIV_game_fsm: begin
          alufn = 6'h1c;
          asel = 2'h0;
          bsel = 4'h1;
          wa = 4'h7;
          we = 1'h1;
          ra = 4'h0;
          M_game_fsm_d = S_DIV_1_game_fsm;
        end
        S_DIV_1_game_fsm: begin
          alufn = 6'h33;
          asel = 2'h0;
          bsel = 4'hc;
          wa = 4'h3;
          we = 1'h1;
          ra = 4'h4;
          M_game_fsm_d = S_DIV_2_game_fsm;
        end
        S_DIV_2_game_fsm: begin
          if (regfile_datain[0+0-:1]) begin
            M_game_fsm_d = S_DIV_P1_game_fsm;
          end else begin
            M_game_fsm_d = S_DIV_P2_game_fsm;
          end
        end
        S_DIV_P1_game_fsm: begin
          alufn = 7'h64;
          asel = 2'h0;
          bsel = 4'h0;
          wa = 4'h5;
          we = 1'h1;
          ra = 4'h5;
          rb = 4'h7;
          M_game_fsm_d = S_P1_CHECK_game_fsm;
        end
        S_DIV_P2_game_fsm: begin
          alufn = 7'h64;
          asel = 2'h0;
          bsel = 4'h0;
          wa = 4'h6;
          we = 1'h1;
          ra = 4'h6;
          rb = 4'h7;
          M_game_fsm_d = S_P2_CHECK_game_fsm;
        end
        S_P1_CHECK_game_fsm: begin
          alufn = 6'h35;
          asel = 2'h0;
          bsel = 4'hd;
          wa = 4'h3;
          we = 1'h1;
          ra = 4'h5;
          M_game_fsm_d = S_P1_CHECK_1_game_fsm;
        end
        S_P1_CHECK_1_game_fsm: begin
          if (regfile_datain[0+0-:1]) begin
            M_game_fsm_d = S_SWITCH_P1_game_fsm;
          end else begin
            M_game_fsm_d = WIN_game_fsm;
          end
        end
        S_SWITCH_P1_game_fsm: begin
          alufn = 6'h00;
          asel = 2'h0;
          bsel = 4'h5;
          wa = 4'h4;
          we = 1'h1;
          ra = 4'h4;
          M_game_fsm_d = S1_game_fsm;
        end
        S_P2_CHECK_game_fsm: begin
          alufn = 6'h35;
          asel = 2'h0;
          bsel = 4'hd;
          wa = 4'h3;
          we = 1'h1;
          ra = 4'h6;
          M_game_fsm_d = S_P2_CHECK_1_game_fsm;
        end
        S_P2_CHECK_1_game_fsm: begin
          if (regfile_datain[0+0-:1]) begin
            M_game_fsm_d = S_SWITCH_P2_game_fsm;
          end else begin
            M_game_fsm_d = WIN_game_fsm;
          end
        end
        S_SWITCH_P2_game_fsm: begin
          alufn = 6'h01;
          asel = 2'h0;
          bsel = 4'h5;
          wa = 4'h4;
          we = 1'h1;
          ra = 4'h4;
          M_game_fsm_d = S1_game_fsm;
        end
        WIN_game_fsm: begin
          M_game_fsm_d = START_game_fsm;
        end
      endcase
    end
  end
  
  always @(posedge clk) begin
    M_game_fsm_q <= M_game_fsm_d;
  end
  
endmodule
